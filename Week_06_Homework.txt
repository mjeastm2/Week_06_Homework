1.0: SELECT *
  FROM tutorial.us_housing_units

2.0: SELECT year,
       month,
       west
  FROM tutorial.us_housing_units

2.1: SELECT *
  FROM tutorial.us_housing_units

2.2 SELECT year,
       month,
       month_name,
       west,
       midwest,
       south,
       northeast
  FROM tutorial.us_housing_units

#You have to manually specify all columns.

2.3: SELECT *        FROM tutorial.us_housing_units

2.4: SELECT *
  FROM tutorial.us_housing_units

2.5: SELECT west AS "West Region"
  FROM tutorial.us_housing_units

2.6: SELECT west AS West_Region,
       south AS South_Region
  FROM tutorial.us_housing_units 

2.7: SELECT year AS "Year",
       month AS "Month",
       month_name AS "Month Name",
       west AS "West",
       midwest AS "Midwest",
       south AS "South",
       northeast AS "Northeast"
  FROM tutorial.us_housing_units

#You have to specify how you want the column name to look with the parenthesis 

3.0: SELECT *
  FROM tutorial.us_housing_units

3.1: SELECT *
  FROM tutorial.us_housing_units
 LIMIT 100

3.2: SELECT *
  FROM tutorial.us_housing_units
 LIMIT 15

#Change the LIMIT number to the number of results that you want to see.

4.0: SELECT * FROM tutorial.us_housing_units

4.1: SELECT *
  FROM tutorial.us_housing_units
 WHERE month = 1

5.0: SELECT *
  FROM tutorial.us_housing_units
 WHERE west > 30

5.1: SELECT *
  FROM tutorial.us_housing_units
 WHERE west > 50000

#no they did not

5.2: SELECT *
  FROM tutorial.us_housing_units
 WHERE south <= 20000

#yes they did

5.3: SELECT *
  FROM tutorial.us_housing_units
 WHERE month_name != 'January'

5.4: SELECT *
  FROM tutorial.us_housing_units
 WHERE month_name > 'January'

5.5: SELECT *
  FROM tutorial.us_housing_units
 WHERE month_name > 'J'

5.6: SELECT *
  FROM tutorial.us_housing_units
 WHERE month_name = 'February'

#set month_name equal to the month you are interested in seeing.
5.7: SELECT *
  FROM tutorial.us_housing_units
 WHERE month_name > 'o'

#set month_name to values earlier than 'N'

5.8: SELECT year,
       month,
       west,
       south,
       west + south AS south_plus_west
  FROM tutorial.us_housing_units

5.9: SELECT year,
       month,
       west,
       south,
       west + south - 4 * year AS nonsense_column
  FROM tutorial.us_housing_units

5.10: SELECT year,
       month,
       west,
       south,
	midwest,
	northeast,
west + south + northeast + midwest AS regions_column
  FROM tutorial.us_housing_units

#Pull out all the columns you are interested in. Add them together and save them as a new name.

5.11: SELECT year,
       month,
       west,
       south,
       (west + south)/2 AS south_west_avg
  FROM tutorial.us_housing_units

5.12: SELECT year,
       month,
       west,
       south,
	midwest,
	northeast
  FROM tutorial.us_housing_units
  WHERE west > (midwest + northeast) 
#pull out all columns of interest. Add midwest and northeast and compare to the west.

5.13: SELECT year,
       month,
       west/(west + south + midwest + northeast)*100 AS west_pct,
       south/(west + south + midwest + northeast)*100 AS south_pct,
       midwest/(west + south + midwest + northeast)*100 AS midwest_pct,
       northeast/(west + south + midwest + northeast)*100 AS northeast_pct
  FROM tutorial.us_housing_units
 WHERE year >= 2000

#pull out each region and get a percentage for it. Specify to only look at years from 2000 and later.

6.0: SELECT * FROM tutorial.billboard_top_100_year_end

6.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 ORDER BY year DESC, year_rank

7.0: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE "group" LIKE 'Snoop%'

7.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE "group" ILIKE 'snoop%'

7.2: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE artist ILIKE 'dr_ke'

7.3: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE artist ILIKE 'Ludacris'

#specify the search for Ludacris

7.4: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE artist ILIKE 'DJ%'
#Use a wildcard to find all artists that begin with DJ

8.0: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year_rank IN (1, 2, 3)

8.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE artist IN ('Taylor Swift', 'Usher', 'Ludacris')

8.2:SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE group IN ('Elvis', 'M.C. Hammer', 'Hammer')

9.0: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year_rank BETWEEN 5 AND 10

9.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year_rank >= 5 AND year_rank <= 10

9.2: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year BETWEEN 1985 AND 1990

#specify the period of years to pull data from

10.0: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE artist IS NULL

10.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE song_name IS NULL

11.0:SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2012 AND year_rank <= 10

11.1:  SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2012
   AND year_rank <= 10
   AND "group" ILIKE '%feat%'

11.2: SELECT *
  FROM tutorial.billboard_top_100_year_end
WHERE year_rank <= 10
	AND "group" ILIKE '%ludacris%'

11.3: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2012
   AND year_rank = 1
   AND year IN (1990, 2000, 2010)

11.4: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year BETWEEN 1960 AND 1969
   AND song_name ilike '%love%'

12.0: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year_rank = 5 OR artist = 'Gotye'

12.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
   AND ("group" ILIKE '%macklemore%' OR "group" ILIKE '%timberlake%')

12.2:SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year_rank <= 10
   AND ("artist" = 'Katy Perry' OR "artist" = 'Bon Jovi')

12.3: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE song_name LIKE '%California%'
   AND (year BETWEEN 1970 AND 1979 OR year BETWEEN 1990 AND 1999)

12.4: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE "group" ILIKE '%dr. dre%'
   AND (year <= 2000 OR year >= 2010)

13.0: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
   AND year_rank NOT BETWEEN 2 AND 3

13.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
   AND year_rank NOT > 3

13.2: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
   AND year_rank <= 3

13.3: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
   AND "group" NOT ILIKE '%macklemore%'

13.4: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
   AND artist IS NOT NULL

13.5: SELECT *
      FROM tutorial.billboard_top_100_year_end
     WHERE song_name NOT ILIKE '%a%'
       AND year = 2013

14.0: SELECT * FROM tutorial.billboard_top_100_year_end

14.1: SELECT *
  FROM tutorial.billboard_top_100_year_end
 ORDER BY artist

14.2: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
 ORDER BY year_rank

14.3: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013
 ORDER BY year_rank DESC

14.4: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2012
 ORDER BY song_title DESC

14.5: SELECT *
  FROM tutorial.billboard_top_100_year_end
  WHERE year_rank <= 3
 ORDER BY year DESC, year_rank

14.6: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year_rank <= 3
 ORDER BY year_rank, year DESC

14.7: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year_rank <= 3
 ORDER BY 2, 1 DESC

14.8: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2010
 ORDER BY year_rank, artist

14.9: SELECT *  --This comment won't affect the way the code runs
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013

14.10: /* Here's a comment so long and descriptive that
it could only fit on multiple lines. Fortunately,
it, too, will not affect how this code runs. */
SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year = 2013

14.11: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE "group" ILIKE '%t-pain%'
 ORDER BY year_rank DESC

14.12: SELECT *
  FROM tutorial.billboard_top_100_year_end
 WHERE year IN (2013, 2003, 1993)  --Select the relevant years
   AND year_rank BETWEEN 10 AND 20  --Limit the rank to 10-20
 ORDER BY year, year_rank